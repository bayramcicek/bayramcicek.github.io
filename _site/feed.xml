<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-02-05T15:33:57+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">bayram cicek’s website</title><subtitle>All content written by me is by default released freely under the Public. - bayram cicek's website</subtitle><entry><title type="html">Heap vs Stack: Bellek Birimlerine Genel Bakış</title><link href="http://localhost:4000/general/2020/02/02/heap-vs-stack.html" rel="alternate" type="text/html" title="Heap vs Stack: Bellek Birimlerine Genel Bakış" /><published>2020-02-02T21:36:01+03:00</published><updated>2020-02-02T21:36:01+03:00</updated><id>http://localhost:4000/general/2020/02/02/heap-vs-stack</id><content type="html" xml:base="http://localhost:4000/general/2020/02/02/heap-vs-stack.html">&lt;ul&gt;
  &lt;li&gt;Stack&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stack&lt;/code&gt;, bilgisayar hafızasının özel bir bölümüdür. Bilgisayar tarafından
kontrol edir yani otomatiktir ve programcı bu alana manuel olarak müdahale etmesi
gerekmez. &lt;i&gt;main()&lt;/i&gt; fonksiyonu dahil fonksiyonların ürettiği geçici değerler tutulur.
&lt;i&gt;LIFO (last in, first out)&lt;/i&gt; veri yapısına sahiptir.&lt;/p&gt;

&lt;p&gt;Fonksiyonların &lt;i&gt;stack&lt;/i&gt; bölgesine eklediği veya çıkardığı geçici değişkenler
ölçüsünde &lt;i&gt;stack&lt;/i&gt; bölgesi, genişler veya daralır. Değişkenler otomatik olarak tahsis
edilir ve serbest bırakılır. İşletim sistemine bağlı olarak boyut sınırlara sahiptir. &lt;i&gt;Stack&lt;/i&gt;
değişkenleri, onları oluşturan fonksiyonlar hayatta	 olduğu sürece vardır.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Heap&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;heap&lt;/code&gt;, bilgisayarın hafızasının otomatik olarak yönetilmediği bölümüdür.
&lt;i&gt;Heap&lt;/i&gt; bölümünde bellek tahsisi için &lt;code class=&quot;highlighter-rouge&quot;&gt;malloc&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;calloc&lt;/code&gt; veya &lt;code class=&quot;highlighter-rouge&quot;&gt;realloc&lt;/code&gt; fonksiyonları
çağırılmalıdır. Tahsis edilen bellek ünitesi yine manuel olarak &lt;code class=&quot;highlighter-rouge&quot;&gt;free&lt;/code&gt; ile serbest
bırakılması gerekir. Bu işlemler programcının sorumluluğundadır. Eğer bir hata
çıkarsa buna &lt;i&gt;memory leak&lt;/i&gt; denir.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Stack&lt;/i&gt; bölümünün aksine &lt;i&gt;heap&lt;/i&gt; bölümünde değişkenler üzerinde (fiziksel
sınırlar dışında) bir sınırlama yoktur. &lt;i&gt;Heap&lt;/i&gt; bölgesi çok az da olsa &lt;i&gt;stack&lt;/i&gt; bölgesine göre
daha yavaştır çünkü &lt;i&gt;heap&lt;/i&gt; bölgesine erişim için &lt;i&gt;pointer&lt;/i&gt;’lara ihtiyacınız vardır.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Stack&lt;/i&gt; bölgesinin aksine &lt;i&gt;heap&lt;/i&gt; bölgesinde oluşturulan değişkenler programdaki
herhangi bir fonksiyon tarafından erişilebilir. &lt;i&gt;Heap&lt;/i&gt; değişkenleri esasında global
değişkenlerdir. &lt;i&gt;Heap&lt;/i&gt;, kendi bölgesinin en etkili bir biçimde kullanıldığını garanti
etmez.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://bayramcicek.com.tr/folder/heap_stack.png&quot; alt=&quot;heap_stack&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;stack--heap-kullanım-alanları--&quot;&gt;Stack – Heap Kullanım Alanları  &lt;br /&gt;&lt;/h3&gt;

&lt;p&gt;Eğer hafızada büyük yer kaplayacak veri yapıları kullanacaksanız (mesela
büyük diziler veya geniş struct yapıları) bu verileri uzun süre tutmak gerektiğinden
heap üzerinde tutmak daha mantıklıdır.&lt;/p&gt;

&lt;p&gt;Eğer sadece ilgili fonksiyon çalışırken kullanmamız gereken değişkenlere
sahipsek bunları stack bölümünde tutabiliriz (bu daha hızlı ve basit olur).&lt;/p&gt;

&lt;p&gt;Eğer diziler ve struct yapıları gibi boyutları değişmesi muhtemel olan
yapılar kullanılacak ise bunları &lt;em&gt;heap&lt;/em&gt;	
bölümünde tahsis etmeli ve dinamik bellek tahsisini manuel olarak yönetmemizi sağlayan 
&lt;code class=&quot;highlighter-rouge&quot;&gt;malloc&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;calloc&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;realloc&lt;/code&gt; ve &lt;code class=&quot;highlighter-rouge&quot;&gt;free&lt;/code&gt; fonksiyonlarını kullanmamız gerekir.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;
&lt;em&gt;2019 güz döneminde hazırladığım dönem sonu bitirme projesinden alıntılanmıştır. Kaynaklar:&lt;/em&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Ritchie, D.M. ve Kernighan, B.W. 1988. &lt;em&gt;The C Programming Language&lt;/em&gt;.
Prentice-Hall, Chapter 5, 7, 8 and Appendix B.5&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gribble, P. (2012). &lt;em&gt;Memory: Stack vs Heap. Summer 2012&lt;/em&gt;, University of
Western from &lt;a href=&quot;https://gribblelab.org/CBootCamp/7_Memory_Stack_vs_Heap.html&quot;&gt;https://gribblelab.org/CBootCamp/7_Memory_Stack_vs_Heap.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Stack</summary></entry><entry><title type="html">Extensions, URI, URL and URN</title><link href="http://localhost:4000/general/2019/06/13/extensions-uri-url-urn.html" rel="alternate" type="text/html" title="Extensions, URI, URL and URN" /><published>2019-06-13T13:28:26+03:00</published><updated>2019-06-13T13:28:26+03:00</updated><id>http://localhost:4000/general/2019/06/13/extensions-uri-url-urn</id><content type="html" xml:base="http://localhost:4000/general/2019/06/13/extensions-uri-url-urn.html">&lt;p&gt;I’ve never created an extension before, and I’ve created some demo extensions by watching some YT tutorials. YT videos and opera / firefox developer page(s) guide me how to create manifest files, icons, and event pages.&lt;/p&gt;

&lt;p&gt;After a few attempts, I finally made an extension called Ekşi Search. Basically, the main idea behind Ekşi Search is selecting a text in any web site and right click then click button.&lt;/p&gt;

&lt;p&gt;Extension source code: &lt;a href=&quot;https://github.com/bayramcicek/eksi-search&quot;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Try my first extension at: &lt;a href=&quot;https://addons.opera.com/en/extensions/details/eksi-search/&quot;&gt;opera&lt;/a&gt; - chrome(removed due to closing google account) - &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/ek%C5%9Fi-search/&quot;&gt;firefox&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
In this study, I learned how to encode a URL by a javascript function:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixedEncodeURI&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;encodeURI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/%5B/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/%5D/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;hello world&lt;/code&gt; will interpreted as &lt;code class=&quot;highlighter-rouge&quot;&gt;hello%20world&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
The encodeURI() function is used to encode a URI. According to &lt;a href=&quot;https://stackoverflow.com/a/26410882/10376542&quot;&gt;stackoverflow&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;URI (uniform resource identifier) identifies a resource (text document, image file, etc)&lt;/li&gt;
  &lt;li&gt;URL (uniform resource locator) is a subset of the URIs that include a network location&lt;/li&gt;
  &lt;li&gt;URN (uniform resource name) is a subset of URIs that include a name within a given space, but no location&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
As an undergraduate student who has just finished 3rd grade, I still feel as a beginner student because when I think ahead, I see that there are lots of things should be learned.&lt;/p&gt;</content><author><name></name></author><summary type="html">I’ve never created an extension before, and I’ve created some demo extensions by watching some YT tutorials. YT videos and opera / firefox developer page(s) guide me how to create manifest files, icons, and event pages.</summary></entry><entry><title type="html">Understanding Internet Speeds and Mbps</title><link href="http://localhost:4000/general/2019/02/25/understanding-internet-speeds-and-mbps.html" rel="alternate" type="text/html" title="Understanding Internet Speeds and Mbps" /><published>2019-02-25T22:28:26+03:00</published><updated>2019-02-25T22:28:26+03:00</updated><id>http://localhost:4000/general/2019/02/25/understanding-internet-speeds-and-mbps</id><content type="html" xml:base="http://localhost:4000/general/2019/02/25/understanding-internet-speeds-and-mbps.html">&lt;p&gt;Internet speeds are so important for us and a big part of our lives. When you want to see how much internet speed is, you’ll see it displayed as mbps or kbps.&lt;/p&gt;

&lt;p&gt;What does mbps and kbps mean? Mbps is a transfer measurement and means &lt;code class=&quot;highlighter-rouge&quot;&gt;mega bit per second&lt;/code&gt;. Let’s look at data storage measurements to make it clear:
&lt;br /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://bayramcicek.com.tr/folder/bit.png&quot; alt=&quot;bit&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;As shown above, we can see that &lt;code class=&quot;highlighter-rouge&quot;&gt;1 byte = 8 bits&lt;/code&gt;. Don’t forget that &lt;code class=&quot;highlighter-rouge&quot;&gt;bit&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;mega bit per second&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example you have 16 mbps internet speed and then you ask yourself “how many megabytes can I download per second with 16 mbps?”&lt;/p&gt;

&lt;p&gt;Back to our &lt;code class=&quot;highlighter-rouge&quot;&gt;bit&lt;/code&gt; that I mentioned before. If &lt;code class=&quot;highlighter-rouge&quot;&gt;8 bits = 1 byte&lt;/code&gt; so &lt;code class=&quot;highlighter-rouge&quot;&gt;16 bits = 2 byte&lt;/code&gt;. Hence, 16 mega &lt;code class=&quot;highlighter-rouge&quot;&gt;bit&lt;/code&gt; per second is equal to 2 mega &lt;code class=&quot;highlighter-rouge&quot;&gt;byte&lt;/code&gt; per second.&lt;/p&gt;

&lt;p&gt;In a few words, divide your internet speed by 8 to see how many megabytes can you download per second.
As a result, &lt;code class=&quot;highlighter-rouge&quot;&gt;16 Mbps = 2 MB/s&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;32 Mbps = 4 MB/s&lt;/code&gt; and so on…&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://bayramcicek.com.tr/folder/down.png&quot; alt=&quot;download&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;I have 14.52 mbps internet speed right now. According to the calculation above, I can download &lt;code class=&quot;highlighter-rouge&quot;&gt;1.8 MB&lt;/code&gt; per second. So, downloading 5 MB file size of a song will take &lt;code class=&quot;highlighter-rouge&quot;&gt;5/1.8 = 2.77&lt;/code&gt; second.&lt;/p&gt;</content><author><name></name></author><summary type="html">Internet speeds are so important for us and a big part of our lives. When you want to see how much internet speed is, you’ll see it displayed as mbps or kbps.</summary></entry><entry><title type="html">Asal Sayı Bulma Algoritması</title><link href="http://localhost:4000/general/2018/10/20/asal-sayi-bulma-algoritmasi.html" rel="alternate" type="text/html" title="Asal Sayı Bulma Algoritması " /><published>2018-10-20T00:33:26+03:00</published><updated>2018-10-20T00:33:26+03:00</updated><id>http://localhost:4000/general/2018/10/20/asal-sayi-bulma-algoritmasi</id><content type="html" xml:base="http://localhost:4000/general/2018/10/20/asal-sayi-bulma-algoritmasi.html">&lt;p&gt;Algoritma konusunu daha iyi kavramak için sorularını çözdüğüm projecteuler’deki bir
soruyu, okulda öğrendiğimiz bir algoritma ile çözmeye çalıştım.&lt;/p&gt;

&lt;p&gt;Soru: 2000000’dan küçük olan asal sayıların toplamını yazdırınız.&lt;/p&gt;

&lt;p&gt;Önce 3–100, sonra 100’ün sağına 0 ekleyerek sayıyı arttırdım:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python3.6
# created by cicek on 20.10.2018 18:50
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;prime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;prime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bu algoritma, sadece küçük sayılar için işe yarıyordu. 3–1000000 arası asal sayıları bulması
dakikalar sürüyordu. Biraz iyileştirme ile bu süreyi kısaltmak istedim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python3.6
# created by cicek on 20.10.2018 18:50
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;prime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;prime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kodun iyileştirilmiş halinde bile sayı büyüdükçe algoritmanın zorlandığını ve 2 milyonu
denediğimde 10’larca dakika geçmesine rağmen sonucu bulamadığını gördüm.&lt;/p&gt;

&lt;p&gt;İnternette biraz araştırdığımda en hızlı algoritmalardan birini denedim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python3.6
# created by cicek on 20.10.2018 08:09
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sumPrimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sieve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sieve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;sieve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sumPrimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;–&amp;gt; sieve dizisine n kadar True ekliyor.&lt;br /&gt;
–&amp;gt; İlk bulduğu sayı 2&lt;br /&gt;
–&amp;gt; 2’nin katlarına False atıyor.&lt;br /&gt;
–&amp;gt; Aynı şekilde 3, 5, 7… ‘yi asal olarak ekledikten sonra, katlarına False atıyor.&lt;br /&gt;&lt;br /&gt;
Böylece asal olmayanlara False atanıyor. Geriye de True, yani asal sayılar kalıyor.
Böylece kodun çalışma süresi 10+ dakikadan 2- saniyeye düştü.&lt;/p&gt;</content><author><name></name></author><summary type="html">Algoritma konusunu daha iyi kavramak için sorularını çözdüğüm projecteuler’deki bir soruyu, okulda öğrendiğimiz bir algoritma ile çözmeye çalıştım.</summary></entry><entry><title type="html">Hello World!</title><link href="http://localhost:4000/general/2017/12/01/hello-world.html" rel="alternate" type="text/html" title="Hello World!" /><published>2017-12-01T14:42:56+03:00</published><updated>2017-12-01T14:42:56+03:00</updated><id>http://localhost:4000/general/2017/12/01/hello-world</id><content type="html" xml:base="http://localhost:4000/general/2017/12/01/hello-world.html">&lt;p&gt;Merhaba!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Merhaba!</summary></entry></feed>