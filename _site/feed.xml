<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-06-18T15:39:08+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Bayram Çiçek’s website</title><subtitle>All content written by me is by default released freely under the Public License.</subtitle><author><name>Bayram Çiçek</name></author><entry><title type="html">Week #3 - GSoC 2023 Weekly Report - Search Field in Options</title><link href="http://localhost:4000/libreoffice-dev/2023/06/18/week-03-gsoc-report.html" rel="alternate" type="text/html" title="Week #3 - GSoC 2023 Weekly Report - Search Field in Options" /><published>2023-06-18T08:23:00+03:00</published><updated>2023-06-18T08:23:00+03:00</updated><id>http://localhost:4000/libreoffice-dev/2023/06/18/week-03-gsoc-report</id><content type="html" xml:base="http://localhost:4000/libreoffice-dev/2023/06/18/week-03-gsoc-report.html"><![CDATA[<h3 id="current-progress-for-week-3">Current progress for week #3</h3>

<ul>
  <li>The Problem in Options sub-dialogs</li>
</ul>

<p>I’ve been working with Options dialog which has more than 30 sub-dialogs. On the left pane of the Options dialog, the TreeView headers and their sub-headers were included in searching. There is no problem here. However, when it comes to adding all sub-dialogs’ <code class="highlighter-rouge">labels</code>, <code class="highlighter-rouge">accessible-names</code>, <code class="highlighter-rouge">accessible-descriptions</code> and <code class="highlighter-rouge">tooltip-texts</code> to the searching, there is a problem arise: When Options dialog opens, it does not initialize all dialogs so it is <code class="highlighter-rouge">NOT</code> possible to access their methods - until they were clicked manually.</p>

<p>I asked about this problem on <code class="highlighter-rouge">IRC #libreoffice-dev</code> channel:</p>

<pre style="white-space: pre-wrap">

[11:26:53 AM] &lt;bayramcicek&gt; Hi. Is it possible to fetch all strings(labels), tooltip-texts and accessible-descriptions for a .ui file without initializing its class/ctor?

[11:30:35 AM] &lt;caolanm&gt; bayramcicek, might need more context. We do extract those at build-time for translation purposes for example, but that might not be useful for your case

[11:33:37 AM] &lt;caolanm&gt; solenv/bin/uiex is that thing

[11:33:53 AM] &lt;bayramcicek&gt; caolanm: I'm trying to add search functionality to `Tools &gt; Options` dialog. Options dialog has a lot of sub-dialogs. I need to get all strings(labels), tooltip-texts and accessible-descriptions in each dialog to include them in search function. I think I should write a method for every single dialog to get all strings/desc/tooltips they contain. Is there a better way/approach to do this?

[11:34:45 AM] &lt;caolanm&gt; <b>options dialog is a super-duper pain, cause the various contents of that don't exist until created on-demand when you switch to the page</b>

[11:38:19 AM] &lt;bayramcicek&gt; <b>Exactly. When Options dialog opens, it does not initialize all dialogs so I couldn't access their methods until I click them manually.</b>

[11:40:01 AM] &lt;caolanm&gt; its also what that dialog is (uniquely) one that has a fixed size and doesn't adapt to its contents if there is a page that is too large

[11:43:49 AM] &lt;bayramcicek&gt; caolanm: "solenv/bin/uiex is that thing" -&gt; thanks. I'll check that.

[11:57:36 AM] &lt;caolanm&gt; bayramcicek, yeah, there might be some use in a build-time approach to attempt to build the index of data you need during the build, rather than at runtime.

</pre>

<p>It is not possible to access all sub-dialogs when Options dialog opens. We can only have access to their <code class="highlighter-rouge">pageIDs</code> and <code class="highlighter-rouge">pageNames(headers)</code>, but we can’t access their methods since they aren’t instantiated. Otherwise, fetching the all data we need would be very easy with a method implemented by all dialogs - something like <code class="highlighter-rouge">pPageInfo-&gt;m_xPage-&gt;getAllTooltips()</code> etc..</p>

<p>Initializing all dialogs when Options dialog opens is another idea. But this is not a good idea since it takes long to create/initialize all sub-dialogs.</p>

<p><br /></p>
<ul>
  <li>About <code class="highlighter-rouge">./solenv/bin/uiex</code> script</li>
</ul>

<p>In <code class="highlighter-rouge">./core</code> directory; e.g. for <code class="highlighter-rouge">optopenclpage.ui</code> file, running</p>

<pre>
 $ ./solenv/bin/uiex -i ./cui/uiconfig/ui/optopenclpage.ui -o output.txt
</pre>

<p>extracts:</p>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp"><span class="o">---</span>

<span class="cp">#. QYxCN
#: ../cui/uiconfig/ui/optopenclpage.ui:24
</span><span class="n">msgctxt</span> <span class="s">"optopenclpage|useopencl"</span>
<span class="n">msgid</span> <span class="s">"Allow use of OpenCL"</span>
<span class="n">msgstr</span> <span class="s">""</span>

<span class="cp">#. MAc4P
#: ../cui/uiconfig/ui/optopenclpage.ui:41
</span><span class="n">msgctxt</span> <span class="s">"optopenclpage|openclused"</span>
<span class="n">msgid</span> <span class="s">"OpenCL is available for use."</span>
<span class="n">msgstr</span> <span class="s">""</span>

<span class="cp">#. fAEQH
#: ../cui/uiconfig/ui/optopenclpage.ui:53
</span><span class="n">msgctxt</span> <span class="s">"optopenclpage|openclnotused"</span>
<span class="n">msgid</span> <span class="s">"OpenCL is not used."</span>
<span class="n">msgstr</span> <span class="s">""</span>

<span class="cp">#. xWE5i
#: ../cui/uiconfig/ui/optopenclpage.ui:67
</span><span class="n">msgctxt</span> <span class="s">"optopenclpage|label1"</span>
<span class="n">msgid</span> <span class="s">"OpenCL Options"</span>
<span class="n">msgstr</span> <span class="s">""</span>

<span class="o">---</span></code></pre></figure>

<p>As far as I understand,  the <code class="highlighter-rouge">./solenv/bin/uiex</code> script extracts all strings that have</p>

<pre>
&lt;... translatable="yes" ... &gt;
</pre>

<p>property. This also extracts all <code class="highlighter-rouge">label</code>, <code class="highlighter-rouge">accessible-name</code>, <code class="highlighter-rouge">accessible-description</code> and <code class="highlighter-rouge">tooltip-text</code> values which are the exact data we need. But this happens only running <code class="highlighter-rouge">./solenv/bin/uiex</code> script. We need the data at build-time.</p>

<p><br /></p>
<ul>
  <li>Extracting the data at build-time</li>
</ul>

<p>The extraction happens when running <code class="highlighter-rouge">$ make translations</code>. <code class="highlighter-rouge">$ make</code> doesn’t extract the data. (or - does it ?)</p>

<p><code class="highlighter-rouge">$ make translations</code> extracts the all information from the following file extensions. (imho, probably this is why it takes longer than expected - on my computer it took 1 min 56 secs.)</p>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp">    <span class="k">static</span> <span class="n">Command</span> <span class="k">const</span> <span class="n">commands</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
        <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">u16string_view</span><span class="p">(</span><span class="s">u".hrc"</span><span class="p">),</span> <span class="s">"hrcex"</span><span class="p">,</span> <span class="nb">false</span> <span class="p">},</span>
        <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">u16string_view</span><span class="p">(</span><span class="s">u".ulf"</span><span class="p">),</span> <span class="s">"ulfex"</span><span class="p">,</span> <span class="nb">false</span> <span class="p">},</span>
        <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">u16string_view</span><span class="p">(</span><span class="s">u".xcu"</span><span class="p">),</span> <span class="s">"cfgex"</span><span class="p">,</span> <span class="nb">false</span> <span class="p">},</span>
        <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">u16string_view</span><span class="p">(</span><span class="s">u".xrm"</span><span class="p">),</span> <span class="s">"xrmex"</span><span class="p">,</span> <span class="nb">false</span> <span class="p">},</span>
        <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">u16string_view</span><span class="p">(</span><span class="s">u"description.xml"</span><span class="p">),</span> <span class="s">"xrmex"</span><span class="p">,</span> <span class="nb">true</span> <span class="p">},</span>
        <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">u16string_view</span><span class="p">(</span><span class="s">u".xhp"</span><span class="p">),</span> <span class="s">"helpex"</span><span class="p">,</span> <span class="nb">false</span> <span class="p">},</span>
        <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">u16string_view</span><span class="p">(</span><span class="s">u".properties"</span><span class="p">),</span> <span class="s">"propex"</span><span class="p">,</span> <span class="nb">false</span> <span class="p">},</span>
        <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">u16string_view</span><span class="p">(</span><span class="s">u".ui"</span><span class="p">),</span> <span class="s">"uiex"</span><span class="p">,</span> <span class="nb">false</span> <span class="p">},</span>
        <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">u16string_view</span><span class="p">(</span><span class="s">u".tree"</span><span class="p">),</span> <span class="s">"treex"</span><span class="p">,</span> <span class="nb">false</span> <span class="p">}</span>
    <span class="p">};</span></code></pre></figure>

<p><code class="highlighter-rouge">$ make translations</code> extracts all strings into <code class="highlighter-rouge">./workdir/pot/*</code> directory.</p>

<p>Extraction happens in <code class="highlighter-rouge">handleFile(...)</code> function at <code class="highlighter-rouge">./l10ntools/source/localize.cxx</code> (<a href="https://opengrok.libreoffice.org/xref/core/l10ntools/source/localize.cxx?r=eaf07139#189">https://opengrok.libreoffice.org/xref/core/l10ntools/source/localize.cxx?r=eaf07139#189</a>)</p>

<p>The extracted file <code class="highlighter-rouge">./workdir/pot/cui/messages.pot</code> includes all strings for <code class="highlighter-rouge">.ui</code> files that inside <code class="highlighter-rouge">./cui/*</code>. But <code class="highlighter-rouge">messages.pot</code> also has strings that unnecessary for our case.</p>

<p>I imagine a script similar to <code class="highlighter-rouge">./solenv/bin/uiex</code> that extracts all <code class="highlighter-rouge">.ui</code> files that Options dialog has, into a file (xml or txt etc. ?), during <code class="highlighter-rouge">$ make</code>. Then we can retrieve the data into a vector and use it at run-time (maybe - when options dialog opens ?).</p>

<p><code class="highlighter-rouge">./workdir/pot/cui/messages.pot</code> file:</p>

<p align="center">
  <img src="../../../../folder/libreoffice-png/w-03-0-messages-pot.png" alt="w-03-1-messages-pot.png" title="messages.pot file" />
</p>
<p><br /></p>

<p>Debug messages after <code class="highlighter-rouge">$ make translations</code>:</p>

<p align="center">
  <img src="../../../../folder/libreoffice-png/w-03-1-terminal.png" alt="w-03-2-terminal.png" title="terminal messages after $ make translations" />
</p>
<p><br /></p>

<h3 id="summary">Summary</h3>

<ul>
  <li>There is a problem with accessing methods of sub-dialogs in Options dialog. (the reason is that the sub-dialogs don’t exist until the page is switched)</li>
  <li>We decided that strings in all <code class="highlighter-rouge">.ui</code> files will be generated at build-time. (which will be the most challenging part in this project)</li>
  <li>I’ll be trying to generate the data at build-time in the following weeks.</li>
</ul>

<p align="center">
    ***
</p>

<p>Steps for implementing search functionality in “Tools &gt; Options”:</p>

<table style="width:100%">
    <tbody>
        <tr>
            <td style="width:75%">1) Add Search field to “Tools &gt; Options” dialog.</td>
            <td colspan="2"><b>DONE - week #1</b></td>
        </tr>
        <tr>
            <td>2) Include Options treeview into searching.</td>
            <td colspan="2"><b>DONE - week #1</b></td>
        </tr>
        <tr>
            <td>3) Include Sub-tree elements (child nodes) into searching.</td>
            <td><b>DONE - week #2</b></td>
        </tr>
        <tr>
            <td>4) Generate all strings(labels), accessible-names, accessible-descriptions and tooltip-texts of all .ui files in ./cui/* directory, at build-time.</td>
            <td><b>Next step (most challenging part)</b></td>
        </tr>
        <tr>
            <td>5) Fetch the generated data - at run-time.</td>
            <td><b>...</b></td>
        </tr>
        <tr>
            <td>6) Include strings(labels), accessible-names, accessible-descriptions and tooltip-texts into searching.</td>
            <td><b>...</b></td>
        </tr>
        <tr>
            <td>7) Implement highlighting feature - if enough time remains.</td>
            <td><b>...</b></td>
        </tr>
        <tr>
            <td>...</td>
            <td><b>...</b></td>
        </tr>
    </tbody>
</table>

<p align="center">
    ***
</p>

<p>Patch: <a href="https://gerrit.libreoffice.org/c/core/+/152519">https://gerrit.libreoffice.org/c/core/+/152519</a></p>

<p>Project Mentors: <u>Andreas Heinisch</u> and <u>Heiko Tietze</u> (Thanks for their time and guidance)</p>

<p>GSoC project page: <a href="https://summerofcode.withgoogle.com/programs/2023/projects/IKtSHIH1">https://summerofcode.withgoogle.com/programs/2023/projects/IKtSHIH1</a></p>

<p>Enhancement request on Bugzilla: <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=49895">https://bugs.documentfoundation.org/show_bug.cgi?id=49895</a></p>]]></content><author><name>Bayram Çiçek</name></author><category term="libreoffice-dev" /><summary type="html"><![CDATA[Current progress for week #3]]></summary></entry><entry><title type="html">Week #2 - GSoC 2023 Weekly Report - Search Field in Options</title><link href="http://localhost:4000/libreoffice-dev/2023/06/10/week-02-gsoc-report.html" rel="alternate" type="text/html" title="Week #2 - GSoC 2023 Weekly Report - Search Field in Options" /><published>2023-06-10T09:03:00+03:00</published><updated>2023-06-10T09:03:00+03:00</updated><id>http://localhost:4000/libreoffice-dev/2023/06/10/week-02-gsoc-report</id><content type="html" xml:base="http://localhost:4000/libreoffice-dev/2023/06/10/week-02-gsoc-report.html"><![CDATA[<h3 id="current-progress-for-week-2">Current progress for week #2</h3>

<ul>
  <li>In week #1, search functionality was implemented only for headers of the options TreeView. (“Tools &gt; Options” - left pane tree).</li>
</ul>

<p>We should expand the search functionality to include the sub-headers(sub-elements) of the nodes. For example; if you type <code class="highlighter-rouge">“libre”</code>, search function will look if there is any match only in headers. But we should also check their child nodes(sub-headers) to be ensure if there will be any match with the search term.</p>

<p align="center">
  <img src="../../../../folder/libreoffice-png/w-01-02-search.png" alt="w-01-02-search.png" title="searching for headers" />
</p>
<p><br /></p>

<ul>
  <li>Sub-tree elements(child nodes) are now included in searching.</li>
</ul>

<p>Patchset 2: <a href="https://gerrit.libreoffice.org/c/core/+/152519/2">https://gerrit.libreoffice.org/c/core/+/152519/2</a></p>

<p>If user types <code class="highlighter-rouge">"japanese"</code>, search function will find the match in <code class="highlighter-rouge">"Searching in Japanese"</code> and will show its parent node - which is <code class="highlighter-rouge">"Language Settings"</code>, as shown below. However, if we only search in headers, this would not be possible and the left pane would be empty - nothing would be shown.</p>

<p align="center">
  <img src="../../../../folder/libreoffice-png/w-02-01-sub-tree-search.png" alt="w-02-01-sub-tree-search.png" title="searching for headers and sub-headers" />
</p>
<p><br /></p>

<p>As you can see at the bottom line of the terminal; if there is a match, debug prints <code class="highlighter-rouge">"found: &lt;full string of where search item found&gt; : &lt;its parent ID&gt;"</code>.</p>

<p><br /></p>
<ul>
  <li>Some technical details</li>
</ul>

<p>All TreeView nodes and their child nodes are stored in a <code class="highlighter-rouge">std::vector</code> as a <code class="highlighter-rouge">std::pair</code>.</p>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp"><span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">OUString</span><span class="p">,</span> <span class="n">sal_uInt16</span><span class="o">&gt;&gt;</span> <span class="n">storedIdVector</span><span class="p">;</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp"><span class="c1">// store Options tree with their sub elements</span>
<span class="kt">void</span> <span class="n">OfaTreeOptionsDialog</span><span class="o">::</span><span class="n">storeOptionsTree</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">storedIdVector</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
    <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">unique_ptr</span><span class="o">&lt;</span><span class="n">weld</span><span class="o">::</span><span class="n">TreeIter</span><span class="o">&gt;</span> <span class="n">xEntry</span> <span class="o">=</span> <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">make_iterator</span><span class="p">();</span>
        <span class="kt">bool</span> <span class="n">bEntry</span> <span class="o">=</span> <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">get_iter_first</span><span class="p">(</span><span class="o">*</span><span class="n">xEntry</span><span class="p">);</span>

        <span class="n">sal_uInt16</span> <span class="n">currentTreeElementId</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

        <span class="c1">// iterate over the tree and their sub-tree elements</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">bEntry</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">OptionsGroupInfo</span><span class="o">*</span> <span class="n">pGroupInfo</span> <span class="o">=</span> <span class="n">weld</span><span class="o">::</span><span class="n">fromId</span><span class="o">&lt;</span><span class="n">OptionsGroupInfo</span><span class="o">*&gt;</span><span class="p">(</span><span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">get_id</span><span class="p">(</span><span class="o">*</span><span class="n">xEntry</span><span class="p">));</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">get_iter_depth</span><span class="p">(</span><span class="o">*</span><span class="n">xEntry</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">currentTreeElementId</span> <span class="o">=</span> <span class="n">pGroupInfo</span><span class="o">-&gt;</span><span class="n">m_nDialogId</span><span class="p">;</span>
                <span class="n">storedIdVector</span><span class="p">.</span><span class="n">push_back</span><span class="p">({</span><span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">get_text</span><span class="p">(</span><span class="o">*</span><span class="n">xEntry</span><span class="p">)</span> <span class="p">,</span><span class="n">currentTreeElementId</span><span class="p">});</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">storedIdVector</span><span class="p">.</span><span class="n">push_back</span><span class="p">({</span><span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">get_text</span><span class="p">(</span><span class="o">*</span><span class="n">xEntry</span><span class="p">)</span> <span class="p">,</span><span class="n">currentTreeElementId</span><span class="p">});</span>
            <span class="p">}</span>
            <span class="n">bEntry</span> <span class="o">=</span> <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">iter_next</span><span class="p">(</span><span class="o">*</span><span class="n">xEntry</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<p>Search function searchs through all first elements of <code class="highlighter-rouge">std::pair&lt;OUString, sal_uInt16&gt;</code>. If there is a match, the second element - which is the ID of the parent node - will be added to left pane as a node.</p>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp"><span class="kt">int</span> <span class="n">OfaTreeOptionsDialog</span><span class="o">::</span><span class="n">applySearchFilter</span><span class="p">(</span><span class="n">OUString</span> <span class="k">const</span><span class="o">&amp;</span> <span class="n">rSearchTerm</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">rSearchTerm</span><span class="p">.</span><span class="n">isEmpty</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="n">clearOptionsDialog</span><span class="p">();</span>
        <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">clear</span><span class="p">();</span>
        <span class="n">Initialize</span><span class="p">(</span><span class="n">m_xFrame</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">m_options</span><span class="p">.</span><span class="n">searchString</span> <span class="o">=</span> <span class="n">rSearchTerm</span><span class="p">;</span>
    <span class="n">utl</span><span class="o">::</span><span class="n">TextSearch</span> <span class="n">textSearch</span><span class="p">(</span><span class="n">m_options</span><span class="p">);</span>

    <span class="n">clearOptionsDialog</span><span class="p">();</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">n_children</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">clear</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">sal_uInt16</span><span class="o">&gt;</span> <span class="n">foundIdsVector</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="kt">size_t</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">storedIdVector</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">OUString</span> <span class="n">itemName</span> <span class="o">=</span> <span class="n">storedIdVector</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">first</span><span class="p">;</span>
        <span class="n">sal_uInt16</span> <span class="n">itemId</span> <span class="o">=</span> <span class="n">storedIdVector</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">second</span><span class="p">;</span>

        <span class="n">sal_Int32</span> <span class="n">aStartPos</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="n">sal_Int32</span> <span class="n">aEndPos</span> <span class="o">=</span> <span class="n">itemName</span><span class="p">.</span><span class="n">getLength</span><span class="p">();</span>

        <span class="c1">// make search</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">textSearch</span><span class="p">.</span><span class="n">SearchForward</span><span class="p">(</span><span class="n">itemName</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">aStartPos</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">aEndPos</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="c1">// debug ("not found: " &lt;&lt; itemName &lt;&lt; " : " &lt;&lt; itemId);</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="c1">// debug ("found: " &lt;&lt; itemName &lt;&lt; " : " &lt;&lt; itemId);</span>

            <span class="kt">bool</span> <span class="n">isFound</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
            <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="n">entryId</span> <span class="o">:</span> <span class="n">foundIdsVector</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">entryId</span> <span class="o">==</span> <span class="n">itemId</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">isFound</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">isFound</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">foundIdsVector</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">itemId</span><span class="p">);</span>

                <span class="cm">/*
                    void generalOptions();      // SID_GENERAL_OPTIONS
                    void loadAndSaveOptions();  // SID_FILTER_DLG
                    void languageOptions();     // SID_LANGUAGE_OPTIONS
                    void writerOptions();       // SID_SW_EDITOPTIONS
                    void writerWebOptions();    // SID_SW_ONLINEOPTIONS
                    void calcOptions();         // SID_SC_EDITOPTIONS
                    void impressOptions();      // SID_SD_EDITOPTIONS
                    void drawOptions();         // SID_SD_GRAPHIC_OPTIONS
                    void mathOptions();         // SID_SM_EDITOPTIONS
                    void databaseOptions();     // SID_SB_STARBASEOPTIONS
                    void chartOptions();        // SID_SCH_EDITOPTIONS
                    void internetOptions();     // SID_INET_DLG
                */</span>

                <span class="k">switch</span><span class="p">(</span><span class="n">itemId</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">case</span> <span class="n">SID_GENERAL_OPTIONS</span><span class="p">:</span>
                        <span class="n">generalOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="k">case</span> <span class="n">SID_FILTER_DLG</span><span class="p">:</span>
                        <span class="n">loadAndSaveOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="k">case</span> <span class="n">SID_LANGUAGE_OPTIONS</span><span class="p">:</span>
                        <span class="n">languageOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="k">case</span> <span class="n">SID_SW_EDITOPTIONS</span><span class="p">:</span>
                        <span class="n">writerOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="k">case</span> <span class="n">SID_SW_ONLINEOPTIONS</span><span class="p">:</span>
                        <span class="n">writerWebOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="k">case</span> <span class="n">SID_SC_EDITOPTIONS</span><span class="p">:</span>
                        <span class="n">calcOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="k">case</span> <span class="n">SID_SD_EDITOPTIONS</span><span class="p">:</span>
                        <span class="n">impressOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="k">case</span> <span class="n">SID_SD_GRAPHIC_OPTIONS</span><span class="p">:</span>
                        <span class="n">drawOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="k">case</span> <span class="n">SID_SM_EDITOPTIONS</span><span class="p">:</span>
                        <span class="n">mathOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="k">case</span> <span class="n">SID_SB_STARBASEOPTIONS</span><span class="p">:</span>
                        <span class="n">databaseOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="k">case</span> <span class="n">SID_SCH_EDITOPTIONS</span><span class="p">:</span>
                        <span class="n">chartOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="k">case</span> <span class="n">SID_INET_DLG</span><span class="p">:</span>
                        <span class="n">internetOptions</span><span class="p">();</span>
                        <span class="k">break</span><span class="p">;</span>

                    <span class="nl">default:</span>
                        <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="c1">// if treeview is empty, return -1</span>
    <span class="k">return</span> <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">n_children</span><span class="p">()</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

<h3 id="summary">Summary</h3>

<ul>
  <li>Sub-tree elements(child nodes) are now included in searching.</li>
  <li>Patchset 2 has been submitted: <a href="https://gerrit.libreoffice.org/c/core/+/152519/2">https://gerrit.libreoffice.org/c/core/+/152519/2</a></li>
</ul>

<p align="center">
    ***
</p>

<p>Steps for implementing search functionality in “Tools &gt; Options”:</p>

<table>
    <tbody>
        <tr>
            <td>1) Add Search field to “Tools &gt; Options” dialog.</td>
            <td><b>DONE - week #1</b></td>
        </tr>
        <tr>
            <td>2) Options treeview.</td>
            <td><b>DONE - week #1</b></td>
        </tr>
        <tr>
            <td>3) Sub-tree elements (child nodes).</td>
            <td><b>DONE - week #2</b></td>
        </tr>
        <tr>
            <td>4) Strings(labels) in all dialogs.</td>
            <td><b>Next step</b></td>
        </tr>
        <tr>
            <td>5) Tooltip texts.</td>
            <td><b>...</b></td>
        </tr>
        <tr>
            <td>6) Accessible descriptions.</td>
            <td><b>...</b></td>
        </tr>
        <tr>
            <td>...</td>
            <td><b>...</b></td>
        </tr>
    </tbody>
</table>

<p align="center">
    ***
</p>

<p>Patch: <a href="https://gerrit.libreoffice.org/c/core/+/152519">https://gerrit.libreoffice.org/c/core/+/152519</a></p>

<p>Project Mentors: <u>Andreas Heinisch</u> and <u>Heiko Tietze</u> (Thanks for their time and guidance)</p>

<p>GSoC project page: <a href="https://summerofcode.withgoogle.com/programs/2023/projects/IKtSHIH1">https://summerofcode.withgoogle.com/programs/2023/projects/IKtSHIH1</a></p>

<p>Enhancement request on Bugzilla: <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=49895">https://bugs.documentfoundation.org/show_bug.cgi?id=49895</a></p>]]></content><author><name>Bayram Çiçek</name></author><category term="libreoffice-dev" /><summary type="html"><![CDATA[Current progress for week #2]]></summary></entry><entry><title type="html">Week #1 - GSoC 2023 Weekly Report - Search Field in Options</title><link href="http://localhost:4000/libreoffice-dev/2023/06/03/week-01-gsoc-report.html" rel="alternate" type="text/html" title="Week #1 - GSoC 2023 Weekly Report - Search Field in Options" /><published>2023-06-03T11:08:00+03:00</published><updated>2023-06-03T11:08:00+03:00</updated><id>http://localhost:4000/libreoffice-dev/2023/06/03/week-01-gsoc-report</id><content type="html" xml:base="http://localhost:4000/libreoffice-dev/2023/06/03/week-01-gsoc-report.html"><![CDATA[<p><em>Thanks to my ‘Search Field in Options’ project mentors Andreas Heinisch and Heiko Tietze for their time and guidance.</em></p>

<p align="center">
    ***
</p>

<h3 id="current-progress-for-week-1">Current progress for week #1</h3>

<ul>
  <li>
    <p>First patchset has been submitted: <a href="https://gerrit.libreoffice.org/c/core/+/152519">https://gerrit.libreoffice.org/c/core/+/152519</a></p>
  </li>
  <li>
    <p>Search bar/field added to “Tools &gt; Options” dialog</p>
  </li>
</ul>

<p><code class="highlighter-rouge">cui/uiconfig/ui/optionsdialog.ui</code>:</p>
<p align="center">
  <img src="../../../../folder/libreoffice-png/w-01-00-search-ui-glade.png" alt="w-01-00-search-ui-glade.png" />
</p>
<p><br /></p>

<p><code class="highlighter-rouge">“Tools &gt; Options”</code> dialog:</p>

<p align="center">
  <img src="../../../../folder/libreoffice-png/w-01-01-search-ui-libre.png" alt="w-01-01-search-ui-libre.png" />
</p>
<p><br /></p>

<ul>
  <li>Search functionality implemented for Options TreeView. (in “Tools &gt; Options”)</li>
</ul>

<p align="center">
  <img src="../../../../folder/libreoffice-png/w-01-02-search.png" alt="w-01-02-search.png" />
</p>
<p><br /></p>

<ul>
  <li>Some technical details</li>
</ul>

<p>There is a timer that waits the user to stop typing if user types faster than <code class="highlighter-rouge">350ms</code>. Since searching can be expensive, we shouldn’t perform search for every key press if pressing between two keys are less than 350ms, which will improve the performance.</p>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp"><span class="n">IMPL_LINK_NOARG</span><span class="p">(</span><span class="n">OfaTreeOptionsDialog</span><span class="p">,</span> <span class="n">SearchUpdateHdl</span><span class="p">,</span> <span class="n">weld</span><span class="o">::</span><span class="n">Entry</span><span class="o">&amp;</span><span class="p">,</span> <span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">m_aUpdateDataTimer</span><span class="p">.</span><span class="n">Start</span><span class="p">();</span>
    <span class="c1">// debug ("timer -&gt; SearchUpdateHdl()");</span>
<span class="p">}</span></code></pre></figure>

<p><code class="highlighter-rouge">ImplUpdateDataHdl()</code> is called for searching:</p>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp"><span class="n">IMPL_LINK_NOARG</span><span class="p">(</span><span class="n">OfaTreeOptionsDialog</span><span class="p">,</span> <span class="n">ImplUpdateDataHdl</span><span class="p">,</span> <span class="n">Timer</span><span class="o">*</span><span class="p">,</span> <span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Pause redraw (Do not redraw at each removal</span>
    <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">freeze</span><span class="p">();</span>

    <span class="c1">// Apply the search filter to the functions list</span>
    <span class="n">OUString</span> <span class="n">aSearchTerm</span><span class="p">(</span><span class="n">m_xSearchEdit</span><span class="o">-&gt;</span><span class="n">get_text</span><span class="p">());</span>
    <span class="kt">int</span> <span class="n">nMatchFound</span> <span class="o">=</span> <span class="n">applySearchFilter</span><span class="p">(</span><span class="n">aSearchTerm</span><span class="p">);</span>
    <span class="c1">// debug ("nMatchFound: " &lt;&lt; nMatchFound);</span>

    <span class="c1">// Resume redraw</span>
    <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">thaw</span><span class="p">();</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">nMatchFound</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">select</span><span class="p">(</span><span class="n">nMatchFound</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>

    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<p><code class="highlighter-rouge">applySearchFilter(aSearchTerm)</code> function gets the word in search bar and does the search:</p>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp"><span class="kt">int</span> <span class="n">OfaTreeOptionsDialog</span><span class="o">::</span><span class="n">applySearchFilter</span><span class="p">(</span><span class="n">OUString</span> <span class="k">const</span><span class="o">&amp;</span> <span class="n">rSearchTerm</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// debug ("applySearchFilter(), rSearchTerm text: " &lt;&lt; rSearchTerm);</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">rSearchTerm</span><span class="p">.</span><span class="n">isEmpty</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="n">ClearAllOptions</span><span class="p">();</span>
        <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">clear</span><span class="p">();</span>
        <span class="n">Initialize</span><span class="p">(</span><span class="n">m_xFrame</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">m_options</span><span class="p">.</span><span class="n">searchString</span> <span class="o">=</span> <span class="n">rSearchTerm</span><span class="p">;</span>
    <span class="n">utl</span><span class="o">::</span><span class="n">TextSearch</span> <span class="n">textSearch</span><span class="p">(</span><span class="n">m_options</span><span class="p">);</span>

    <span class="n">ClearAllOptions</span><span class="p">();</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">n_children</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">clear</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="kt">size_t</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">aDialogIdVector</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">nEntry</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
        <span class="n">OUString</span> <span class="n">aStr</span> <span class="o">=</span> <span class="n">aDialogIdVector</span><span class="p">[</span><span class="n">nEntry</span><span class="p">].</span><span class="n">first</span><span class="p">;</span>
        <span class="n">sal_uInt16</span> <span class="n">aId</span> <span class="o">=</span> <span class="n">aDialogIdVector</span><span class="p">[</span><span class="n">nEntry</span><span class="p">].</span><span class="n">second</span><span class="p">;</span>
        <span class="c1">// debug ("aDialogIdVector["&lt;&lt; nEntry &lt;&lt; "]: " &lt;&lt; aStr &lt;&lt; " : " &lt;&lt; aId);</span>

        <span class="n">sal_Int32</span> <span class="n">aStartPos</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="n">sal_Int32</span> <span class="n">aEndPos</span> <span class="o">=</span> <span class="n">aStr</span><span class="p">.</span><span class="n">getLength</span><span class="p">();</span>

        <span class="c1">// make search</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">textSearch</span><span class="p">.</span><span class="n">SearchForward</span><span class="p">(</span><span class="n">aStr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">aStartPos</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">aEndPos</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="c1">// debug ("not found: " &lt;&lt; aStr &lt;&lt; " : " &lt;&lt; aId);</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="c1">// debug ("found: " &lt;&lt; aStr &lt;&lt; " : " &lt;&lt; aId);</span>

            <span class="c1">// TODO: convert allDialogIds vector to a pair to hold function pointers.</span>
            <span class="c1">// -&gt; (allDialogIds[i].second)();</span>
            <span class="k">switch</span><span class="p">(</span><span class="n">aId</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">case</span> <span class="n">SID_GENERAL_OPTIONS</span><span class="p">:</span>
                    <span class="n">generalOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="k">case</span> <span class="n">SID_FILTER_DLG</span><span class="p">:</span>
                    <span class="n">loadAndSaveOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="k">case</span> <span class="n">SID_LANGUAGE_OPTIONS</span><span class="p">:</span>
                    <span class="n">languageOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="k">case</span> <span class="n">SID_SW_EDITOPTIONS</span><span class="p">:</span>
                    <span class="n">writerOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="k">case</span> <span class="n">SID_SW_ONLINEOPTIONS</span><span class="p">:</span>
                    <span class="n">writerWebOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="k">case</span> <span class="n">SID_SC_EDITOPTIONS</span><span class="p">:</span>
                    <span class="n">calcOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="k">case</span> <span class="n">SID_SD_EDITOPTIONS</span><span class="p">:</span>
                    <span class="n">impressOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="k">case</span> <span class="n">SID_SD_GRAPHIC_OPTIONS</span><span class="p">:</span>
                    <span class="n">drawOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="k">case</span> <span class="n">SID_SM_EDITOPTIONS</span><span class="p">:</span>
                    <span class="n">mathOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="k">case</span> <span class="n">SID_SB_STARBASEOPTIONS</span><span class="p">:</span>
                    <span class="n">databaseOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="k">case</span> <span class="n">SID_SCH_EDITOPTIONS</span><span class="p">:</span>
                    <span class="n">chartOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="k">case</span> <span class="n">SID_INET_DLG</span><span class="p">:</span>
                    <span class="n">internetOptions</span><span class="p">();</span>
                    <span class="k">break</span><span class="p">;</span>

                <span class="nl">default:</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="c1">// if treeview is empty, return -1</span>
    <span class="k">return</span> <span class="n">xTreeLB</span><span class="o">-&gt;</span><span class="n">n_children</span><span class="p">()</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

<h3 id="summary">Summary</h3>

<ul>
  <li>First patchset has been submitted: <a href="https://gerrit.libreoffice.org/c/core/+/152519">https://gerrit.libreoffice.org/c/core/+/152519</a></li>
  <li>Search bar/field added to “Tools &gt; Options” dialog.</li>
  <li>Search functionality implemented to Options treeview.</li>
</ul>

<p align="center">
    ***
</p>

<p>Steps for implementing search functionality in “Tools &gt; Options”:</p>

<table>
    <tbody>
        <tr>
            <td>1) Add Search field to “Tools &gt; Options” dialog.</td>
            <td><b>DONE - week #1</b></td>
        </tr>
        <tr>
            <td>2) Options treeview.</td>
            <td><b>DONE - week #1</b></td>
        </tr>
        <tr>
            <td>3) Sub-tree elements (child nodes).</td>
            <td><b>Next step</b></td>
        </tr>
        <tr>
            <td>4) Strings(labels) in all dialogs.</td>
            <td><b>...</b></td>
        </tr>
        <tr>
            <td>5) Tooltip texts.</td>
            <td><b>...</b></td>
        </tr>
        <tr>
            <td>6) Accessible descriptions.</td>
            <td><b>...</b></td>
        </tr>
        <tr>
            <td>...</td>
            <td><b>...</b></td>
        </tr>
    </tbody>
</table>

<p>Additional hack:</p>
<ul>
  <li>show modified options with some special indicator (as in KDE settings). (<em>better to discuss this idea in a separate ticket</em>)</li>
</ul>

<p align="center">
    ***
</p>

<p>Patch: <a href="https://gerrit.libreoffice.org/c/core/+/152519">https://gerrit.libreoffice.org/c/core/+/152519</a></p>

<p>Project Mentors: <u>Andreas Heinisch</u> and <u>Heiko Tietze</u> (Thanks for their time and guidance)</p>

<p>GSoC project page: <a href="https://summerofcode.withgoogle.com/programs/2023/projects/IKtSHIH1">https://summerofcode.withgoogle.com/programs/2023/projects/IKtSHIH1</a></p>

<p>Enhancement request on Bugzilla: <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=49895">https://bugs.documentfoundation.org/show_bug.cgi?id=49895</a></p>]]></content><author><name>Bayram Çiçek</name></author><category term="libreoffice-dev" /><summary type="html"><![CDATA[Thanks to my ‘Search Field in Options’ project mentors Andreas Heinisch and Heiko Tietze for their time and guidance.]]></summary></entry><entry><title type="html">Google Summer of Code 2023 Timeline - Search Field in Options</title><link href="http://localhost:4000/libreoffice-dev/2023/05/18/gsoc-timeline.html" rel="alternate" type="text/html" title="Google Summer of Code 2023 Timeline - Search Field in Options" /><published>2023-05-18T11:18:00+03:00</published><updated>2023-05-18T11:18:00+03:00</updated><id>http://localhost:4000/libreoffice-dev/2023/05/18/gsoc-timeline</id><content type="html" xml:base="http://localhost:4000/libreoffice-dev/2023/05/18/gsoc-timeline.html"><![CDATA[<h3 id="project-search-field-in-options">Project: Search Field in Options</h3>

<p>I’ll be working on “Search Field in Options” project under the mentorship of Heiko Tietze and Andreas Heinisch throughout the Google Summer of Code 2023 program.</p>

<h3 id="timeline">Timeline</h3>

<style>
.center, td:nth-child(2), td:nth-child(3){
  text-align: center;
  vertical-align: middle;
}
</style>

<table>
    <thead>
        <tr class="center">
            <th style="width:25%"># Week</th>
            <th style="width:43%">Tasks</th>
            <th style="width:32%">Notes</th>
        </tr>
    </thead>
    <tbody>
        <tr style="background-color: yellow">
            <td><b>#1</b> (May 29 - June 5)</td>
            <td>Add a seach field to ./cui/uiconfig/ui/optionsdialog.ui</td>
            <td>First week of coding period</td>
        </tr>
        <tr>
            <td><b>#2</b> (June 5 - 12)</td>
            <td rowspan="3">Connect search field(ui) with Visual Class Library (VCL)</td>
            <td rowspan="3">VCL provides a graphical toolkit similar to gtk+, Qt, SWING etc.</td>
        </tr>
        <tr>
            <td><b>#3</b> (June 12 - 19)</td>
        </tr>
        <tr>
            <td><b>#4</b> (June 19 - 26)</td>
        </tr>
        <tr>
            <td><b>#5</b> (June 26 - July 3)</td>
            <td>Start implement seach funtionality</td>
            <td></td>
        </tr>
        <tr>
            <td><b>#6</b> (July 3 - 10)</td>
            <td>Start by searching the treeview</td>
            <td></td>
        </tr>
        <tr style="background-color: yellow">
            <td><b>#7</b> (July 10 - 17)</td>
            <td>Midterm evaluation for contributors and mentors</td>
            <td>Midterm evaluation deadline (July 14 – 18:00 UTC)</td>
        </tr>
        <tr>
            <td><b>#8</b> (July 17 - 24)</td>
            <td>  Iterate over the tabs and match captions as well as tooltip with the search term</td>
            <td rowspan="2">Update UI</td>
        </tr>
        <tr>
            <td><b>#9</b> (July 24 - 31)</td>
            <td>Expand the search functionality for every single dialog step by step</td>
        </tr>
        <tr>
            <td><b>#10</b> (July 31 - Aug 7)</td>
            <td>UI: Hide tree nodes where the item is not found</td>
            <td></td>
        </tr>
        <tr>
            <td><b>#11</b> (Aug 7 - 14)</td>
            <td>Code refactoring</td>
            <td></td>
        </tr>
        <tr>
            <td><b>#12</b> (Aug 14 - 21)</td>
            <td>Final implementations</td>
            <td></td>
        </tr>
        <tr style="background-color: yellow;">
            <td><b>#13</b> (Aug 21 - 28)</td>
            <td>Final week: Contributor Final Submission</td>
            <td>Final evaluation deadline (Aug 28 – 18:00 UTC)</td>
        </tr>
        <tr>
            <td>(Aug 28 - Sep 4)</td>
            <td> Mentor Final Evaluation</td>
            <td>Mentor evaluations deadline (Sep 4 – 18:00 UTC)</td>
        </tr>
        <tr>
            <td>(Sep 5, 2023)</td>
            <td>Initial results of Google Summer of Code 2023 announced</td>
            <td></td>
        </tr>
    </tbody>
</table>

<h3 id="project-summary">Project Summary</h3>

<p>This enhancement aims to provide a search functionality for “Tools &gt; Options”. LibreOffice is a complex application with a large and growing number of options. It is not easy to find the right needle in the haystack. Like most other complex applications, it will be valuable and useful enhancement to add a search field to the “Tools &gt; Options” dialog that iterates over the various tabs and filters where the search text is found.</p>

<p>Project page: <a href="https://summerofcode.withgoogle.com/programs/2023/projects/IKtSHIH1">https://summerofcode.withgoogle.com/programs/2023/projects/IKtSHIH1</a></p>

<p>Enhancement request on Bugzilla: <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=49895">https://bugs.documentfoundation.org/show_bug.cgi?id=49895</a></p>]]></content><author><name>Bayram Çiçek</name></author><category term="libreoffice-dev" /><summary type="html"><![CDATA[Project: Search Field in Options]]></summary></entry><entry><title type="html">Mini-interview with LibreOffice &amp;amp; The Document Foundation membership</title><link href="http://localhost:4000/general/2021/11/27/interview-with-libreoffice-tdf-membership.html" rel="alternate" type="text/html" title="Mini-interview with LibreOffice &amp;amp; The Document Foundation membership" /><published>2021-11-27T17:18:51+03:00</published><updated>2021-11-27T17:18:51+03:00</updated><id>http://localhost:4000/general/2021/11/27/interview-with-libreoffice-tdf-membership</id><content type="html" xml:base="http://localhost:4000/general/2021/11/27/interview-with-libreoffice-tdf-membership.html"><![CDATA[<h4 id="heres-the-latest-developments-on-my-libreoffice-journey---after-google-summer-of-code-2021">Here’s the latest developments on my LibreOffice journey - after Google Summer of Code 2021:</h4>

<ul>
  <li>I’m a TDF member since October 2021.
    <ul>
      <li><a href="https://www.documentfoundation.org/governance/members/">https://www.documentfoundation.org/governance/members/</a>
<br /><br /></li>
    </ul>
  </li>
  <li>You can read the mini-interview about my contributions to LibreOffice and thoughts about TDF membership - on The Document Foundation blog:
    <ul>
      <li><a href="https://blog.documentfoundation.org/blog/2021/11/22/community-member-monday-bayram-cicek/">https://blog.documentfoundation.org/blog/2021/11/22/community-member-monday-bayram-cicek/</a></li>
    </ul>
  </li>
</ul>

<h4 id="exactly-1-year-after-first-patch">Exactly 1 year after first patch</h4>

<p>One year ago this month, I sent my <a href="https://gerrit.libreoffice.org/c/core/+/106489">first patch to LibreOffice/core</a> and announced it with a blog post titled <a href="https://bayramcicek.com.tr/general/2020/11/25/libreoffice.html">Contributing to LibreOffice: First patch</a>. In that day, I couldn’t imagine that I would successfully complete GSoC’21 and become a TDF member within 1 year.</p>

<p>Thanks to LibreOffice community, mentors and developers for their help throughout the journey. Without your help, I couldn’t do it.</p>]]></content><author><name>Bayram Çiçek</name></author><category term="general" /><summary type="html"><![CDATA[Here’s the latest developments on my LibreOffice journey - after Google Summer of Code 2021:]]></summary></entry><entry><title type="html">Final Report - GSoC - 100 Paper Cuts</title><link href="http://localhost:4000/libreoffice-dev/2021/08/23/final-report-gsoc.html" rel="alternate" type="text/html" title="Final Report - GSoC - 100 Paper Cuts" /><published>2021-08-23T09:03:12+03:00</published><updated>2021-08-23T09:03:12+03:00</updated><id>http://localhost:4000/libreoffice-dev/2021/08/23/final-report-gsoc</id><content type="html" xml:base="http://localhost:4000/libreoffice-dev/2021/08/23/final-report-gsoc.html"><![CDATA[<h3 id="about-project">About project</h3>

<p><em>100 Paper Cuts</em> project aims for improving user interface, implementing enhancement requests and solving most-annoying issues on the UX side of LibreOffice. <em>100 Paper Cuts</em> is a list of bugs and enhancement requests relating to LibreOffice’s user experience: <a href="https://wiki.documentfoundation.org/100_Paper_Cuts">https://wiki.documentfoundation.org/100_Paper_Cuts</a></p>

<h3 id="goal">Goal</h3>

<p>Main goal was to solve as many bugs as I can, but at least 5 bugs, during GSoC.</p>

<h3 id="my-work">My Work</h3>

<ul>
  <li>
    <p>In ‘Format &gt; Page Style… &gt; Area’ Tab, Mouseover effect added to the palettes on Color, Gradient, Bitmap, Pattern and Hatch sections.</p>
  </li>
  <li>
    <p>Fixed opposite cropping issue on flipped images in Writer</p>
  </li>
  <li>
    <p>In Writer, 3 issues about comment section fixed:</p>

    <ul>
      <li>
        <p>comment section scrolls to top of its view
  when clicking inside a comment view.</p>
      </li>
      <li>
        <p>clicking inside a comment view, scrolls the
  view to old cursor location automatically
  (if old cursor out of the visible area)</p>
      </li>
      <li>
        <p>comment section scrolls automatically to the
  old <em>selected</em> text (if it’s out of visible area)
  when clicking inside the Writer canvas view</p>
      </li>
    </ul>
  </li>
  <li>
    <p>In “Properties sidebar &gt; Cell Appearance”, Calc shows preview of the selected cell borders. This feature also added for diagonal borders.</p>
  </li>
  <li>
    <p>Calc: added diagonal borders in Toolbar&gt;Borders</p>
    <ul>
      <li>added diagonal left, diagonal right border and criss-cross border icon to Borders tab</li>
      <li>added diagonal left and diagonal right borders feature</li>
      <li>implemented removing diagonal borders when set “no border”</li>
      <li>added criss-cross line feature</li>
      <li>added a unit test for diagonal borders</li>
    </ul>
  </li>
</ul>

<h3 id="commits">Commits</h3>

<ul>
  <li><a href="https://gerrit.libreoffice.org/c/core/+/116395">https://gerrit.libreoffice.org/c/core/+/116395</a> (merged)</li>
  <li><a href="https://gerrit.libreoffice.org/c/core/+/116770">https://gerrit.libreoffice.org/c/core/+/116770</a> (merged)</li>
  <li><a href="https://gerrit.libreoffice.org/c/core/+/118638">https://gerrit.libreoffice.org/c/core/+/118638</a> (merged)</li>
  <li><a href="https://gerrit.libreoffice.org/c/core/+/120519">https://gerrit.libreoffice.org/c/core/+/120519</a> (merged)</li>
  <li><a href="https://gerrit.libreoffice.org/c/core/+/118951">https://gerrit.libreoffice.org/c/core/+/118951</a> (merged)</li>
  <li><a href="https://gerrit.libreoffice.org/c/core/+/120262">https://gerrit.libreoffice.org/c/core/+/120262</a> (WIP)</li>
</ul>

<h3 id="bugs">Bugs</h3>

<ul>
  <li><a href="https://bugs.documentfoundation.org/show_bug.cgi?id=109388">https://bugs.documentfoundation.org/show_bug.cgi?id=109388</a> (fixed)</li>
  <li><a href="https://bugs.documentfoundation.org/show_bug.cgi?id=104995">https://bugs.documentfoundation.org/show_bug.cgi?id=104995</a> (fixed)</li>
  <li><a href="https://bugs.documentfoundation.org/show_bug.cgi?id=91519">https://bugs.documentfoundation.org/show_bug.cgi?id=91519</a> (fixed)</li>
  <li><a href="https://bugs.documentfoundation.org/show_bug.cgi?id=143890">https://bugs.documentfoundation.org/show_bug.cgi?id=143890</a> (fixed)</li>
  <li>
    <p><a href="https://bugs.documentfoundation.org/show_bug.cgi?id=143919">https://bugs.documentfoundation.org/show_bug.cgi?id=143919</a> (fixed)</p>
  </li>
  <li>
    <p><a href="https://bugs.documentfoundation.org/show_bug.cgi?id=143300">https://bugs.documentfoundation.org/show_bug.cgi?id=143300</a> (reported)</p>
  </li>
  <li>
    <p>(Work In Progress): <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=51665">tdf#51665</a>: (WIP) Support diagonal borders in Writer-Tables</p>
  </li>
  <li>(worked on): <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=34438">tdf#34438</a> - group selection does not work with raster images
    <ul>
      <li>commented: <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=34438#c47">https://bugs.documentfoundation.org/show_bug.cgi?id=34438#c47</a></li>
      <li>developers decided that get rid of Writer-Images</li>
      <li>this bug should be done by an experienced developer<br /><br /></li>
    </ul>
  </li>
  <li>(worked on): <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=98404">tdf#98404</a> - UX - While objects on a slide are being edited, the new slide sorter Ctrl+Shift shortcut combinations incorrectly receive focus and move the slide
    <ul>
      <li>commented: <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=98404#c25">https://bugs.documentfoundation.org/show_bug.cgi?id=98404#c25</a></li>
    </ul>
  </li>
</ul>

<h3 id="whats-left-to-do-or-can-be-done">Whats left to do or can be done?</h3>

<ul>
  <li><a href="https://bugs.documentfoundation.org/show_bug.cgi?id=51665">tdf#51665</a>: (WIP) Support diagonal borders in Writer-Tables
    <ul>
      <li><a href="https://gerrit.libreoffice.org/c/core/+/120262">https://gerrit.libreoffice.org/c/core/+/120262</a></li>
      <li>This bug has 2 step: a) implement diagonal borders, b) draw them.</li>
      <li>I’m workink on this bug for ~4 weeks and it is Work in Progress. Writer-Tables doesn’t have diagonal borders feature. I implemented RES_BOX_TLBR attribute and added SID_ATTR_BORDER_DIAG_TLBR for now. After that, we should try to draw them. I’m trying to draw diagonal LEFT border first. If we can draw that, then it becomes easy to apply all the changes to diagonal RIGHT border.</li>
      <li>If we can add diagonal borders feature, we can also implement criss-cross border feature.</li>
      <li>In addition to drawing diagonal borders, we should also be able to change their color and style. To apply these 3 things (drawing, color, style), we have to change a lot of things in the codebase. Therefore I think <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=51665">tdf#51665</a> can be a standalone GSoC project itself :) <br /><br /></li>
    </ul>
  </li>
  <li><a href="https://bugs.documentfoundation.org/show_bug.cgi?id=84099">tdf#84099</a> - Calc can’t handle very high rows
    <ul>
      <li>Scrolling in spreadsheets on Calc is designed to snap to rows. Therefore, this makes it hard to work with spreadsheets with large row heights. This annoying issue is not only specific for vertical scroll but also affects horizontal scroll. If we can add <em>smooth scroll</em> feature, it will likely solve the <em>height</em> issue on both rows and columns. <br /><br /></li>
    </ul>
  </li>
  <li><a href="https://bugs.documentfoundation.org/show_bug.cgi?id=90253">tdf#90253</a> - Drawing a textbox in Impress doesn’t retain its height
    <ul>
      <li>And, this is another bug that I want to work on it.</li>
    </ul>
  </li>
</ul>

<h3 id="summary">Summary</h3>

<ul>
  <li>total bugs : 8</li>
  <li>fixed : 5</li>
  <li>WIP : 1</li>
  <li>worked on but couldn’t fix : 2</li>
</ul>

<p>I learned lots of things even from the bugs that I couldn’t fix. At least, I informed the LibreOffice community about my research and shared the code pointers by commenting on the bug page. Therefore, someone who will work on the bugs that I commented, can easily see the code pointers and my works on it.</p>

<p align="center">
    ***
</p>

<p>I’m very happy that we all reached the end of GSoC. During that time, I know that I had a responsibility for doing everything that I can. Therefore I worked hard, tried to get familiar with the LibreOffice community and worked on as many bugs as I can.</p>

<p>I learned a lot of things during the GSoC. Although GSoC is finished, I will definitely continue to contribute to LibreOffice. I am really happy to be a part of the LibreOffice community and GSoC.</p>

<h3 id="thanks">Thanks</h3>

<p>I’m really thankful to LibreOffice and Google for providing us this such a great opportunity which helped me gain this amazing experience!</p>

<p>I always tried to be active on IRC #libreoffice-dev channel, and I want to thank for everybody who helped me about my questions.</p>

<p>And most importantly, greatly thankful to <em>Muhammet Kara</em> and <em>Heiko Tietze</em> which were my mentors throughout the GSoC period. They always guided me everything about my questions. Thank you so much for your guidance, code reviews, time and everything.</p>

<p>Thanks to everyone in the LibreOffice community for their help, I learned a lot from you :)</p>

<h3 id="all-weekly-gsoc-reports">All weekly GSoC reports</h3>

<ul>
  <li>16 Aug 2021   <a href="https://bayramcicek.com.tr/libreoffice-dev/2021/08/16/week-10-gsoc.html">Week #10 - GSoC Weekly Report - 100 Paper Cuts</a></li>
  <li>08 Aug 2021   <a href="https://bayramcicek.com.tr/libreoffice-dev/2021/08/08/week-09-gsoc.html">Week #9 - GSoC Weekly Report - 100 Paper Cuts</a></li>
  <li>01 Aug 2021   <a href="https://bayramcicek.com.tr/libreoffice-dev/2021/08/01/week-07-08-gsoc.html">Week #7 - #8 - GSoC Weekly Report - 100 Paper Cuts</a></li>
  <li>18 Jul 2021   <a href="https://bayramcicek.com.tr/libreoffice-dev/2021/07/18/week-06-gsoc.html">Week #6 - GSoC Weekly Report - 100 Paper Cuts</a></li>
  <li>11 Jul 2021   <a href="https://bayramcicek.com.tr/libreoffice-dev/2021/07/11/week-05-gsoc.html">Week #5 - GSoC Weekly Report - 100 Paper Cuts</a></li>
  <li>05 Jul 2021   <a href="https://bayramcicek.com.tr/libreoffice-dev/2021/07/05/week-03-04-gsoc.html">Week #3 - #4 - GSoC Weekly Report - 100 Paper Cuts</a></li>
  <li>04 Jul 2021   <a href="https://bayramcicek.com.tr/libreoffice-dev/2021/07/04/week-02-gsoc.html">Week #2 - GSoC Weekly Report - 100 Paper Cuts</a></li>
  <li>13 Jun 2021   <a href="https://bayramcicek.com.tr/libreoffice-dev/2021/06/13/week-01-gsoc.html">Week #1 - GSoC Weekly Report - 100 Paper Cuts</a></li>
</ul>

<p><strong>Useful links:</strong></p>

<ul>
  <li><a href="https://gerrit.libreoffice.org/q/owner:mail%2540bayramcicek.com.tr">https://gerrit.libreoffice.org/q/owner:mail%2540bayramcicek.com.tr</a> (my all contributions to LibreOffice)</li>
  <li><a href="https://translations.documentfoundation.org/user/bayramcicek/">https://translations.documentfoundation.org/user/bayramcicek/</a> (my translations in LibreOffice)</li>
  <li><a href="https://bayramcicek.com.tr/libreoffice/">https://bayramcicek.com.tr/libreoffice/</a> (all blog posts related to LibreOffice development)</li>
  <li><a href="https://summerofcode.withgoogle.com/projects/#4776372494401536">https://summerofcode.withgoogle.com/projects/#4776372494401536</a> (Google Summer of Code - Project page)</li>
</ul>]]></content><author><name>Bayram Çiçek</name></author><category term="libreoffice-dev" /><summary type="html"><![CDATA[About project]]></summary></entry><entry><title type="html">Git: editing old commits</title><link href="http://localhost:4000/general/2021/08/18/git-edit-old-commits.html" rel="alternate" type="text/html" title="Git: editing old commits" /><published>2021-08-18T12:37:43+03:00</published><updated>2021-08-18T12:37:43+03:00</updated><id>http://localhost:4000/general/2021/08/18/git-edit-old-commits</id><content type="html" xml:base="http://localhost:4000/general/2021/08/18/git-edit-old-commits.html"><![CDATA[<ul>
  <li>list commit log</li>
</ul>
<pre>
$ git log
or
$ git log --oneline</pre>

<ul>
  <li>find SHA-ID of your commit, then:</li>
</ul>
<pre>
$ git rebase --interactive $SHA^
or
(list last e.g. 3 commit)
$ git rebase -i HEAD~3
</pre>

<ul>
  <li>
    <p>Change ‘pick’ to ‘edit’ for your commit that you want to edit</p>
  </li>
  <li>
    <p>make your changes in files etc.</p>
  </li>
  <li>
    <p>add your changes &amp; edit commit message:</p>
  </li>
</ul>

<pre>
$ git commit -a --amend
</pre>

<ul>
  <li>end rebase</li>
</ul>

<pre>
$ git rebase --continue
</pre>

<ul>
  <li>or cancel</li>
</ul>
<pre>
$ git rebase --abort
</pre>

<ul>
  <li>push changes to remote server</li>
</ul>
<pre>
git push --force-with-lease &lt;origin&gt; &lt;test-branch&gt;
</pre>

<p>(or <code class="highlighter-rouge">$ ./logerrit submit master</code> for LibreOffice)</p>]]></content><author><name>Bayram Çiçek</name></author><category term="general" /><summary type="html"><![CDATA[list commit log $ git log or $ git log --oneline]]></summary></entry><entry><title type="html">Week #10 - GSoC Weekly Report - 100 Paper Cuts</title><link href="http://localhost:4000/libreoffice-dev/2021/08/16/week-10-gsoc.html" rel="alternate" type="text/html" title="Week #10 - GSoC Weekly Report - 100 Paper Cuts" /><published>2021-08-16T01:01:36+03:00</published><updated>2021-08-16T01:01:36+03:00</updated><id>http://localhost:4000/libreoffice-dev/2021/08/16/week-10-gsoc</id><content type="html" xml:base="http://localhost:4000/libreoffice-dev/2021/08/16/week-10-gsoc.html"><![CDATA[<p>GSoC progress for week #10.</p>

<h4 id="calc-border-preview-doesnt-show-the-diagonal-borders-in-cell-appearance-section">Calc: Border preview doesn’t show the diagonal borders in Cell Appearance section</h4>

<ul>
  <li>Bug: <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=143890">tdf#143890</a> - Border preview doesn’t show the diagonal borders</li>
  <li>Commit: <a href="https://gerrit.libreoffice.org/c/core/+/120519">https://gerrit.libreoffice.org/c/core/+/120519</a></li>
</ul>

<p>In (Sidebar Tab) <code class="highlighter-rouge">Properties &gt; Cell Appearance</code>, Calc always shows preview of the selected cell borders.</p>

<p>For example; if LEFT border set in a cell, the preview shows LEFT border (as expected). But this feature doesn’t show the preview of diagonal borders. When we set (e.g.)diagonal RIGHT border in a cell, the preview doesn’t update itself to show diagonal RIGHT border.</p>

<p>Steps to Reproduce:</p>
<ol>
  <li>open Calc and select a cell</li>
  <li>(in Sidebar) go to “Properties &gt; Cell Appearance”</li>
  <li>select Diagonal Up (and/or Down) border</li>
</ol>

<p>Actual Results:
Preview doesn’t show diagonal borders</p>

<p>Expected Results:
Diagonal borders should be shown in the preview (as other borders).</p>

<h4 id="code-pointers">Code pointers:</h4>

<ul>
  <li>
    <p>sc/source/ui/sidebar/CellAppearancePropertyPanel.cxx: <a href="https://opengrok.libreoffice.org/xref/core/sc/source/ui/sidebar/CellAppearancePropertyPanel.cxx?r=1653bb9b#467">https://opengrok.libreoffice.org/xref/core/sc/source/ui/sidebar/CellAppearancePropertyPanel.cxx?r=1653bb9b#467</a></p>
  </li>
  <li>
    <p>sc/source/ui/sidebar/CellAppearancePropertyPanel.hxx</p>
  </li>
</ul>

<h4 id="technical-details">Technical Details</h4>

<p>Line preview is drawn in:</p>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp"><span class="kt">void</span> <span class="n">CellAppearancePropertyPanel</span><span class="o">::</span><span class="n">UpdateCellBorder</span><span class="p">(</span><span class="kt">bool</span> <span class="n">bTop</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bBot</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bLeft</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bRight</span><span class="p">,</span>
                                                   <span class="kt">bool</span> <span class="n">bVer</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bHor</span><span class="p">)</span>
<span class="p">{</span>
	<span class="cm">/* ... */</span>

    <span class="k">if</span><span class="p">(</span><span class="n">bLeft</span><span class="p">)</span>
        <span class="n">pVirDev</span><span class="o">-&gt;</span><span class="n">DrawLine</span><span class="p">(</span> <span class="n">aTL</span><span class="p">,</span><span class="n">aBL</span> <span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">bRight</span><span class="p">)</span>
        <span class="n">pVirDev</span><span class="o">-&gt;</span><span class="n">DrawLine</span><span class="p">(</span> <span class="n">aTR</span><span class="p">,</span><span class="n">aBR</span> <span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">bTop</span><span class="p">)</span>
        <span class="n">pVirDev</span><span class="o">-&gt;</span><span class="n">DrawLine</span><span class="p">(</span> <span class="n">aTL</span><span class="p">,</span><span class="n">aTR</span> <span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">bBot</span><span class="p">)</span>
        <span class="n">pVirDev</span><span class="o">-&gt;</span><span class="n">DrawLine</span><span class="p">(</span> <span class="n">aBL</span><span class="p">,</span><span class="n">aBR</span> <span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">bVer</span><span class="p">)</span>
        <span class="n">pVirDev</span><span class="o">-&gt;</span><span class="n">DrawLine</span><span class="p">(</span> <span class="n">aVT</span><span class="p">,</span><span class="n">aVB</span> <span class="p">);</span>

<span class="p">}</span></code></pre></figure>

<p><code class="highlighter-rouge">DrawLine()</code> method draws the lines. Here, lines for diagonal borders are missing. We need to add <code class="highlighter-rouge">DrawLine()</code> method for them and update the parameters of the <code class="highlighter-rouge">UpdateCellBorder(...)</code> function:</p>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp"><span class="kt">void</span> <span class="n">CellAppearancePropertyPanel</span><span class="o">::</span><span class="n">UpdateCellBorder</span><span class="p">(</span><span class="kt">bool</span> <span class="n">bTop</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bBot</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bLeft</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bRight</span><span class="p">,</span>
                                                   <span class="kt">bool</span> <span class="n">bVer</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bHor</span><span class="p">,</span>
                                                   <span class="kt">bool</span> <span class="n">bTLBR</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bBLTR</span><span class="p">)</span>
<span class="p">{</span>                                             

    <span class="cm">/* ... */</span>

    <span class="k">if</span><span class="p">(</span><span class="n">bTLBR</span><span class="p">)</span>
        <span class="n">pVirDev</span><span class="o">-&gt;</span><span class="n">DrawLine</span><span class="p">(</span> <span class="n">aTL</span><span class="p">,</span><span class="n">aBR</span> <span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">bBLTR</span><span class="p">)</span>
        <span class="n">pVirDev</span><span class="o">-&gt;</span><span class="n">DrawLine</span><span class="p">(</span> <span class="n">aBL</span><span class="p">,</span><span class="n">aTR</span> <span class="p">);</span>

    <span class="cm">/* ... */</span>

<span class="p">}</span></code></pre></figure>

<p align="center">
	***
</p>

<p>Before:</p>

<p align="center">
  <img src="https://bayramcicek.com.tr/folder/libreoffice-png/calc_before_preview.png" alt="calc_before_preview.png" />
</p>

<p>After:</p>

<p align="center">
  <img src="https://bayramcicek.com.tr/folder/libreoffice-png/calc_after_preview.png" alt="calc_after_preview.png" />
</p>

<p><br /></p>
<p align="center">
	***
</p>

<h4 id="created-a-new-commit-for-tdf51665-wip-support-diagonal-borders-in-writer-tables">Created a new commit for tdf#51665: (WIP) Support diagonal borders in Writer-Tables</h4>

<ul>
  <li>Bug: <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=51665">tdf#51665</a> - Support diagonal borders in TABLEs</li>
  <li>Commit: <a href="https://gerrit.libreoffice.org/c/core/+/120262">https://gerrit.libreoffice.org/c/core/+/120262</a></li>
</ul>

<p>patchset1:</p>
<ul>
  <li>implement RES_BOX_TLBR attribute</li>
  <li>add SID_ATTR_BORDER_DIAG_TLBR</li>
</ul>

<p>patchset2:</p>
<ul>
  <li>improve case SID_ATTR_BORDER_DIAG_TLBR (tabsh.cxx)</li>
  <li>add diagonal left condition in ndtbl1.cxx</li>
  <li>try to draw diagonal left border:
    <ul>
      <li>drawing in a cell seems complicated.</li>
      <li>currently it draw TLBR line on the document
layout, not in current cell.</li>
      <li>we have to draw TLBR line in current cell.
(needs improvement)</li>
    </ul>
  </li>
</ul>

<p>IMHO, I think tdf#51665 can be a standalone GSoC project itself. In addition to drawing diagonal borders, we should also be able to change their color and style. To apply these 3 things (drawing, color, style), we have to change a lot of things in the codebase and we need more time.</p>

<h3 id="summary-of-week-10">Summary of week #10</h3>

<ul>
  <li>Fixed: <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=143890">tdf#143890</a> - Border preview doesn’t show the diagonal borders</li>
  <li>Worked on diagonal borders in Writer-Tables, and published 2 new patchsets</li>
</ul>

<p>Commits</p>
<ul>
  <li><a href="https://gerrit.libreoffice.org/c/core/+/120519">https://gerrit.libreoffice.org/c/core/+/120519</a></li>
  <li><a href="https://gerrit.libreoffice.org/c/core/+/120262">https://gerrit.libreoffice.org/c/core/+/120262</a></li>
</ul>

<h3 id="next-week-to-do">Next Week TO-DO</h3>

<ul>
  <li>Write “Final Report” blog post</li>
  <li>Make last changes on patches that on gerrit</li>
  <li>try to draw diagonal borders for Writer-Tables.</li>
</ul>]]></content><author><name>Bayram Çiçek</name></author><category term="libreoffice-dev" /><summary type="html"><![CDATA[GSoC progress for week #10.]]></summary></entry><entry><title type="html">Week #9 - GSoC Weekly Report - 100 Paper Cuts</title><link href="http://localhost:4000/libreoffice-dev/2021/08/08/week-09-gsoc.html" rel="alternate" type="text/html" title="Week #9 - GSoC Weekly Report - 100 Paper Cuts" /><published>2021-08-08T11:34:53+03:00</published><updated>2021-08-08T11:34:53+03:00</updated><id>http://localhost:4000/libreoffice-dev/2021/08/08/week-09-gsoc</id><content type="html" xml:base="http://localhost:4000/libreoffice-dev/2021/08/08/week-09-gsoc.html"><![CDATA[<p>GSoC progress for week #9.</p>

<h4 id="diagonal-borders-now-accessible-from-table-toolbar--borders-tab-in-calc">Diagonal borders now accessible from “Table Toolbar &gt; Borders” tab in Calc</h4>

<p>Calc has diagonal borders feature in <code class="highlighter-rouge">Format &gt; Cells... &gt; Borders tab</code> and (Sidebar Tab) <code class="highlighter-rouge">Properties &gt; Cell Appearance</code>. However, this feature wasn’t exist in “Table Toolbar &gt; Borders” tab. With commit <a href="https://gerrit.libreoffice.org/c/core/+/119685">https://gerrit.libreoffice.org/c/core/+/119685</a>, Calc can draw diagonal left and diagonal right borders from table toolbar. \o/</p>

<p>This <a href="https://gerrit.libreoffice.org/c/core/+/119685">https://gerrit.libreoffice.org/c/core/+/119685</a> commit had “<em>(WIP) Support diagonal borders in Writer-Tables</em>” name before, and I sent 3-4 patchsets for Writer-diagonal-borders, but I made it Calc-specific and changed the title as “<em>Calc: made diagonal borders accessible in Toolbar&gt;Borders</em>”. The reason of this change is: Writer and Calc use the same Border tab in Table toolbar (svx/source/tbxctrls/tbcontrl.cxx). Therefore I will leave the commit as Calc-specific and will submit a new commit just for Writer-specific. But first, I want to write UItest for Calc-diagonal-borders next week.</p>

<p>Additionaly I want to work on <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=34689">https://bugs.documentfoundation.org/show_bug.cgi?id=34689</a> - UI scroll problem: Cell with dimensions exceeding screen dimensions impossible to work with.</p>

<h4 id="code-pointers">Code pointers:</h4>

<ul>
  <li>svx/source/tbxctrls/tbcontrl.cxx: <a href="https://opengrok.libreoffice.org/xref/core/svx/source/tbxctrls/tbcontrl.cxx?r=d3228d49#2221">https://opengrok.libreoffice.org/xref/core/svx/source/tbxctrls/tbcontrl.cxx?r=d3228d49#2221</a></li>
</ul>

<h3 id="summary-of-week-9">Summary of week #9</h3>

<ul>
  <li>Worked on Writer-Tables and Calc-Borders</li>
  <li>Made diagonal borders accessible in Toolbar&gt;Borders / Calc</li>
  <li>Sent new patchsets in commit : <a href="https://gerrit.libreoffice.org/c/core/+/119685">https://gerrit.libreoffice.org/c/core/+/119685</a></li>
</ul>

<h3 id="next-week-to-do">Next Week TO-DO</h3>

<ul>
  <li>Write UItest for Calc diagonal-borders.</li>
  <li>Work on <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=34689">https://bugs.documentfoundation.org/show_bug.cgi?id=34689</a> - UI scroll problem: Cell with dimensions exceeding screen dimensions impossible to work with.</li>
</ul>]]></content><author><name>Bayram Çiçek</name></author><category term="libreoffice-dev" /><summary type="html"><![CDATA[GSoC progress for week #9.]]></summary></entry><entry><title type="html">Week #7 - #8 - GSoC Weekly Report - 100 Paper Cuts</title><link href="http://localhost:4000/libreoffice-dev/2021/08/01/week-07-08-gsoc.html" rel="alternate" type="text/html" title="Week #7 - #8 - GSoC Weekly Report - 100 Paper Cuts" /><published>2021-08-01T09:04:42+03:00</published><updated>2021-08-01T09:04:42+03:00</updated><id>http://localhost:4000/libreoffice-dev/2021/08/01/week-07-08-gsoc</id><content type="html" xml:base="http://localhost:4000/libreoffice-dev/2021/08/01/week-07-08-gsoc.html"><![CDATA[<p>GSoC progress for week #7 and week #8.</p>

<h4 id="made-research-on-borders-in-writer-tables">Made research on borders in Writer-Tables</h4>

<ul>
  <li>Bug: <a href="https://bugs.documentfoundation.org/show_bug.cgi?id=51665">tdf#51665</a> - Support diagonal borders in TABLEs</li>
</ul>

<p>In <code class="highlighter-rouge">Table Toolbar &gt; Bordes</code>, Writer has 8 border frames for each cell, and has 12 border frames for multiple selected cells. With 2 new borders (Diagonal Left/Right), Writer has 14 border frames.</p>

<p>I made research about how applying borders works in Writer-Tables. Then I started to work on it with sending first patchsets as WIP: <a href="https://gerrit.libreoffice.org/c/core/+/119685">https://gerrit.libreoffice.org/c/core/+/119685</a></p>

<p>I realized that Calc has diagonal borders feature in both <code class="highlighter-rouge">Format &gt; Cells... &gt; Borders tab</code> and (Sidebar Tab) <code class="highlighter-rouge">Properties &gt; Cell Appearance</code>. Next week, I will try to understand how diagonal borders work in Calc cells and will try to implement them in Writer-Tables.</p>

<h4 id="code-pointers">Code pointers:</h4>

<ul>
  <li>
    <p>sw/source/core/layout/paintfrm.cxx</p>
  </li>
  <li>
    <p>sw/source/core/doc/tblafmt.cxx</p>
  </li>
  <li>
    <p>svx/source/tbxctrls/tbcontrl.cxx: <a href="https://opengrok.libreoffice.org/xref/core/svx/source/tbxctrls/tbcontrl.cxx?r=d3228d49#2221">https://opengrok.libreoffice.org/xref/core/svx/source/tbxctrls/tbcontrl.cxx?r=d3228d49#2221</a></p>
  </li>
  <li>
    <p>sc/source/ui/sidebar/CellBorderStyleControl.cxx:133 : <a href="https://opengrok.libreoffice.org/xref/core/sc/source/ui/sidebar/CellBorderStyleControl.cxx?r=f3fc16f4#133">https://opengrok.libreoffice.org/xref/core/sc/source/ui/sidebar/CellBorderStyleControl.cxx?r=f3fc16f4#133</a>
<br /></p>
  </li>
</ul>
<p align="center">
    ***
</p>

<h3 id="summary-of-last-2-weeks">Summary of last 2 weeks</h3>

<ul>
  <li>Worked on Writer-Tables</li>
  <li>commit: (WIP) Support diagonal borders in Writer-Tables : <a href="https://gerrit.libreoffice.org/c/core/+/119685">https://gerrit.libreoffice.org/c/core/+/119685</a></li>
</ul>

<h3 id="next-week-to-do">Next Week TO-DO</h3>

<ul>
  <li>Work on Calc diagonal borders and try to implement them in Writer-Tables</li>
</ul>]]></content><author><name>Bayram Çiçek</name></author><category term="libreoffice-dev" /><summary type="html"><![CDATA[GSoC progress for week #7 and week #8.]]></summary></entry></feed>